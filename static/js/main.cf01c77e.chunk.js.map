{"version":3,"sources":["components/Day/Day.module.css","components/Days/Days.module.css","components/Day/DetailDay.js","components/Day/Day.js","components/Days/Days.js","UseScript.js","App.js","index.js"],"names":["module","exports","DetailDay","forecast","match","idItem","parseInt","params","id","console","log","item","filter","className","styles","Detail","Detail__Forecast","Detail__Time","today","Detail__Temp","src","image","alt","Detail__Icon","Detail__Degree","temp","Detail__Des","description","Detail__Wind","name","size","Math","round","windSpeed","Detail__Info","Detail__Period","Detail__Suntime","sunrise","sunset","Detail__Rainy","Detail__Cloud","Detail__Box","clouds","rain","Detail__RainChance","pops","Day","title","day","temperature","Days","list","map","to","UseScript","url","useEffect","script","document","createElement","async","body","appendChild","removeChild","App","fetchData","daysInWeek","monthNames","useState","dailyForecast","setDailyForecast","a","endPoint","fetch","headers","Accept","data","json","dailyJson","dataEveryday","daily","getDaySpecific","dataResult","pop","arrDays","index","converseDate","EpochToDate","dt","current","Date","todayTime","getHours","getMinutes","getMonth","getDate","sunriseDate","sunsetDate","sunriseTime","sunsetTime","getDay","wind_speed","weather","icon","toFixed","epoch","getTimezoneOffset","path","exact","render","props","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cf01c77e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"day\":\"Day_day__2l9Ju\",\"title\":\"Day_title__2LtYT\",\"image\":\"Day_image__3AduG\",\"temperature\":\"Day_temperature__1KxzQ\",\"Detail\":\"Day_Detail__11J6o\",\"Detail__Forecast\":\"Day_Detail__Forecast__3DFnP\",\"Detail__Time\":\"Day_Detail__Time__SxHlQ\",\"Detail__Temp\":\"Day_Detail__Temp__RZv0_\",\"Detail__Icon\":\"Day_Detail__Icon__26KqU\",\"Detail__Degree\":\"Day_Detail__Degree__1bQaQ\",\"Detail__Des\":\"Day_Detail__Des__9y60p\",\"Detail__Wind\":\"Day_Detail__Wind__yRbtJ\",\"Detail__Info\":\"Day_Detail__Info__J49ds\",\"Detail__Period\":\"Day_Detail__Period__2Po_i\",\"Detail__Rainy\":\"Day_Detail__Rainy__qE2E7\",\"Detail__Cloud\":\"Day_Detail__Cloud__ewpiM\",\"Detail__RainChance\":\"Day_Detail__RainChance__3xR_e\",\"Detail__Box\":\"Day_Detail__Box__2McKF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Days_list__1rQyk\"};","import React, {useState, useEffect} from 'react';\r\n\r\nimport styles from \"./Day.module.css\";\r\nconst DetailDay = ({ forecast, match }) => {\r\n\r\n    const idItem = parseInt(match.params.id);\r\n    console.log(idItem);\r\n    console.log(forecast);\r\n    const item = forecast.filter(item => {\r\n        return item.id === idItem;\r\n    })\r\n    return (\r\n        <div className={styles.Detail}>\r\n            <div className={styles.Detail__Forecast}>\r\n                <span className={styles.Detail__Time}>{item[0].today}</span>\r\n                <div className={styles.Detail__Temp}>\r\n                    <img \r\n                        src={`http://openweathermap.org/img/wn/${item[0].image}@2x.png`}\r\n                        alt=\"\"\r\n                        className={styles.Detail__Icon}\r\n\r\n                    />\r\n                    <span className={styles.Detail__Degree}>{item[0].temp}Â°C</span>\r\n                </div>\r\n                <p className={styles.Detail__Des}>\r\n                    This day maybe {item[0].description}\r\n                </p>\r\n                <p className={styles.Detail__Wind}>\r\n                    Wind speed: \r\n                    <ion-icon name=\"leaf-outline\" size=\"small\"></ion-icon>\r\n                    <span>{Math.round(item[0].windSpeed * 10) / 10} M/s</span>\r\n                </p>\r\n\r\n\r\n            </div>\r\n            <div className={styles.Detail__Info}>\r\n                <div className={styles.Detail__Period}>\r\n                    <div className={styles.Detail__Suntime}>\r\n                        <h2>Sunrise</h2>\r\n                        <span>{item[0].sunrise}</span>\r\n                    </div>\r\n\r\n                    <div className={styles.Detail__Suntime}>\r\n                        <h2>Sunset</h2>\r\n                        <span>{item[0].sunset}</span>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.Detail__Rainy}>\r\n                    <div className={styles.Detail__Cloud}>\r\n                        <h3>Cloud</h3>\r\n                        <div className={styles.Detail__Box}>\r\n                            <ion-icon name=\"cloudy-outline\"></ion-icon>\r\n                            <span className=\"\">{item[0].clouds} %</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles.Detail__Cloud}>\r\n                        <h3>Rain</h3>\r\n                        <div className={styles.Detail__Box}>\r\n                            <ion-icon name=\"rainy-outline\"></ion-icon>\r\n                            <span className=\"\">{item[0].rain}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.Detail__RainChance}>\r\n                    <h3>Pop</h3>\r\n                    <div className={styles.Detail__Box}>\r\n                            <ion-icon name=\"umbrella-outline\"></ion-icon>\r\n                            <span className=\"\">{item[0].pops * 100}%</span>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailDay;","import React from \"react\";\r\nimport styles from \"./Day.module.css\";\r\n\r\nconst Day = ({ title, image, temp }) => {\r\n  return (\r\n    <div className={styles.day}>\r\n      <h3 className={styles.title}>{title}</h3>\r\n      <img\r\n        src={`http://openweathermap.org/img/wn/${image}@2x.png`}\r\n        alt=\"Monday\"\r\n        className={styles.image}\r\n      />\r\n      <span className={styles.temperature}>{temp}Â°C</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Day;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport Day from \"../Day/Day\";\r\nimport styles from \"./Days.module.css\";\r\n\r\nconst Days = ({ forecast }) => {\r\n\r\n  return (\r\n     <div className={styles.list}>\r\n        {forecast.map(day => {\r\n           return (\r\n              <Link to={`/day/${day.id}`}> \r\n                <Day key={day.id} {...day} />\r\n              </Link>\r\n            ) \r\n        })}\r\n    </div>\r\n  )\r\n \r\n};\r\n\r\nexport default Days;\r\n","import React, {useEffect} from 'react'\r\n\r\nconst UseScript = (url) => {\r\n    useEffect(() => {\r\n        const script = document.createElement('script');\r\n    \r\n        script.src = url;\r\n        script.async = true;\r\n    \r\n        document.body.appendChild(script);\r\n    \r\n        return () => {\r\n          document.body.removeChild(script);\r\n        }\r\n    }, [url]);\r\n};\r\n\r\nexport default UseScript;","import React,{useState, useEffect} from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport \"./App.css\";\n\nimport DetailDay from './components/Day/DetailDay';\nimport Days from \"./components/Days/Days\";\nimport UseScript from \"./UseScript\";\n\nconst App =() => {\n\n\n  useEffect(() => {\n\n    fetchData();\n  \n  }, []);\n\n  UseScript(\"https://unpkg.com/ionicons@5.4.0/dist/ionicons.js\");\n\n\n  const daysInWeek = [\n    \"Sun\",\n    \"Mon\",\n    \"Tue\",\n    \"Wed\",\n    \"Thu\",\n    \"Fri\",\n    \"Sat\"\n  ];\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n\n  const [dailyForecast, setDailyForecast] = useState([]);\n  \n  const fetchData = async () => {\n    \n    \n    \n    const apiKey = \"75f0ce8e280c94504c81b2e5a39e5c9b\";\n    const [lon, lat] = [105.8833, 21.1167];\n    const exclude = \"alerts\"; // exclude = current,minutely,hourly,daily,alerts\n    const cors_api_host = \"https://cors-anywhere.herokuapp.com/\";\n    \n    const endPoint = `${cors_api_host}api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=${exclude}&appid=${apiKey}`;\n    const data = await fetch(endPoint, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    });\n    const dailyJson = await data.json();\n    const dataEveryday = dailyJson.daily;\n    const dataResult = await getDaySpecific(dataEveryday);\n    const removeLastDay = dataResult.pop();\n\n    //waiting for fetching\n   // setDailyForecast({data: dataResult, isFetching: true});\n\n    console.log(dataResult);\n\n    setDailyForecast(dataResult);\n  };\n\n  const getDaySpecific = async (arrDays) => {\n    return arrDays.map((item, index) => {\n      const converseDate = EpochToDate(item.dt);\n      const current = new Date();\n      const currentTime = current.getHours() + \":\" + ( (current.getMinutes() < 10) ? \"0\" + current.getMinutes() : current.getMinutes() );\n      const amOrPm = current.getHours() < 12 ? 'am' : 'pm';\n      const todayTime = currentTime + amOrPm +', '+ monthNames[converseDate.getMonth()] + ' ' + converseDate.getDate();\n\n      const sunriseDate = EpochToDate(item.sunrise).getHours() + \":\" + ( (EpochToDate(item.sunrise).getMinutes() < 10) ? \"0\" + EpochToDate(item.sunrise).getMinutes() : EpochToDate(item.sunrise).getMinutes() );\n      const sunsetDate = EpochToDate(item.sunset).getHours() + \":\" + ( (EpochToDate(item.sunset).getMinutes() < 10) ? \"0\" + EpochToDate(item.sunset).getMinutes() : EpochToDate(item.sunset).getMinutes() );\n\n      const sunriseTime = sunriseDate + (EpochToDate(item.sunrise).getHours() < 12 ? 'am' : 'pm');\n      const sunsetTime = sunsetDate + (EpochToDate(item.sunset).getHours() < 12 ? 'am' : 'pm');\n      \n      return {\n        id: index + 2000,\n        title: daysInWeek[converseDate.getDay()],\n        today: todayTime,\n        sunrise: sunriseTime,\n        sunset: sunsetTime,\n        windSpeed: item.wind_speed,\n        description: item.weather[0].description,\n        clouds: item.clouds,\n        rain: item.rain,\n        pops: item.pop,\n        image: item.weather[0].icon,\n        temp: (item.temp.day - 273.15).toFixed(2)\n      };\n    });\n  };\n\n  // Remove\n  const generateUniqueKey = () => {\n    return Math.random().toString(36).substr(2, 9);\n  }\n\n  //Epoch To Date\n  const EpochToDate = (epoch) => {\n    if (epoch < 10000000000) epoch *= 1000; // convert to milliseconds (Epoch is usually expressed in seconds, but Javascript uses Milliseconds)\n    var epoch = epoch + new Date().getTimezoneOffset() * -1; //for timeZone\n    return new Date(epoch);\n  };\n\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <h1 className=\"Title\">Forecast in next 7 days weather</h1>\n        <Link to=\"/weather-locally\" className=\"Logo\">Weather Locally</Link>\n        <Switch>\n          <Route path='/weather-locally' exact >\n            <Days forecast={dailyForecast}/>\n          </Route>\n          <Route \n              path='/day/:id' \n              render={(props) => (<DetailDay forecast= {dailyForecast} {...props} />)}      \n          />\n        </Switch>\n  \n      </div>\n    </Router>\n    \n  );\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}